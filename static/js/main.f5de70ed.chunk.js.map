{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","reverse","setState","sortByAlphabet","ALPHABET","sortByLength","LENGTH","reset","visibleGoods","goods","sort","firstGood","secondGood","localeCompare","length","getReorderedGoods","this","className","type","onClick","classNames","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBARzB,EAYEG,eAAiB,WACf,EAAKD,SAAS,CAAEJ,SAAUJ,EAASU,YAbvC,EAgBEC,aAAe,WACb,EAAKH,SAAS,CAAEJ,SAAUJ,EAASY,UAjBvC,EAoBEC,MAAQ,WACN,EAAKL,SAAU,CACbJ,SAAUJ,EAASK,KACnBC,YAAY,KAvBlB,4CA2BE,WACE,IAAMQ,EApDH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUE,EACZ,EADYA,WAENQ,EAAY,YAAOC,GAiBzB,OAfAD,EAAaE,MAAK,SAACC,EAAWC,GAC5B,OAAQd,GACN,KAAKJ,EAASU,SACZ,OAAOO,EAAUE,cAAcD,GACjC,KAAKlB,EAASY,OACZ,OAAOK,EAAUG,OAASF,EAAWE,OACvC,QACE,OAAO,MAITd,GACFQ,EAAaP,UAGRO,EA+BgBO,CAAkBpB,EAAiBqB,KAAKnB,OAC7D,EAAiCmB,KAAKnB,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WAElB,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWnB,IAAaJ,EAASU,SAC7B,iBAAmB,0BACvBe,QAASH,KAAKb,eAJhB,iCASA,wBACEe,KAAK,SACLD,UAAWnB,IAAaJ,EAASY,OAC7B,oBAAsB,6BAC1Ba,QAASH,KAAKX,aAJhB,4BASA,wBACEa,KAAK,SACLD,UAAWjB,EACP,oBAAsB,6BAC1BmB,QAASH,KAAKf,QAJhB,sBASEH,IAAaJ,EAASK,MAAQC,IAE9B,wBACEkB,KAAK,SACLD,UAAWG,IACT,mBACA,CAAE,WAAYtB,IAAaJ,EAASK,OAEtCoB,QAASH,KAAKT,MANhB,sBAaJ,6BACGC,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eA9EpC,GAAyBC,IAAMC,WClD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f5de70ed.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstGood, secondGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return firstGood.localeCompare(secondGood);\n      case SortType.LENGTH:\n        return firstGood.length - secondGood.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState(({\n      sortType: SortType.NONE,\n      isReversed: false,\n    }));\n  };\n\n  render(): React.ReactNode {\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={sortType === SortType.ALPHABET\n              ? 'button is-info' : 'button is-info is-light'}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={sortType === SortType.LENGTH\n              ? 'button is-success' : 'button is-success is-light'}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={isReversed\n              ? 'button is-warning' : 'button is-warning is-light'}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed)\n          && (\n            <button\n              type=\"button\"\n              className={classNames(\n                'button is-danger',\n                { 'is-light': sortType !== SortType.NONE },\n              )}\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}